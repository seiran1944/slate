

<MySql主從式架構>
	初認識MySql主從式架構，認為他與RAID 1 的概念有點相像，用來達到資料備份保護的目的。
由Master與Slave的同時讀寫數據來看，Slave在資料同時讀取時的效能，大多較Master為快，
若能運用這個特性，當有資料欲大量同時讀寫時，可將讀、寫入分開在不同機器上運作，
達到讀寫分離，以降低附載、提高效能，同時也可以達到資料備份與安全的目的。

	然而，延伸，同時讀寫時Slave讀取快於Master這點，推測在這種環境下運作時，
Slave的負載應小於Master，Slave不像Master一樣擔任全時寫入的角色，
這代表著Slave讀取Bin-Log資料並不是一直都同步在進行，雖然其詳細的運作時機與機制個人並不甚了解，但可由這點得知，Master與Slave的資料並非全時100%同步，這意味著雙方資料存在著時間點上的誤差，雖然RAID 1 亦有相似的特性，但Master與Slave屬於遠端佈署的關係，分屬兩台獨立運作的機器
，且建構在比硬體晶片穩固性更脆弱的網路架構上，資料延遲的情形應會遠大於RAID 1 以及該次測試的VM環境；且若遭遇機器或網路連接的突發情形，資料延遲的情形應會更劇。
	
	在這個前提下作讀寫分離的操作時，資料的即時性應會受到牽連，考慮到這點，在本次測試中，
曾嘗試著在不同時間點比對壓力下的資料一致性，但依目前測試環境運作看來，影響程度似乎不明顯，且並沒有使用額外的分析工具來驗證資料，僅粗略概算，並沒有得到實際的結果。

	另外，原本預期Slave會在某種程度的壓力下，為寫入Bin-log資料而發生讀取底於Master的情形，
在本次測試中，似乎並沒有如預期中的明顯，多次測驗的結果中，僅有一次出現Slave讀取低於Master的狀況。


<壓力測試 之 機器很忙的>
										PS: https://www.youtube.com/watch?v=9o20U91aJdg
										資料一起上，機器不趕時間卻跟牛仔一樣忙
	壓力測試過程當中，雖已使用遠端佈署分擔測試壓力，但高併發數仍不斷造成機器卡住的現象，平均在1500~3000筆不等的併發量就會卡住，因此後來將測試計畫修改為由迴圈分擔1000併發數:
	分別為 : 1000筆 => 1000併發數
			10000筆 => 1000併發數 X 10迴圈
			100000筆 => 1000併發數 X 100迴圈
	但是否測試結果，需深究。
	